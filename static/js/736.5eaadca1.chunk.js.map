{"version":3,"file":"static/js/736.5eaadca1.chunk.js","mappings":"0SAEaA,EAAYC,EAAAA,GAAAA,IAAH,mHAOTC,EAASD,EAAAA,GAAAA,GAAH,gHAONE,EAAOF,EAAAA,GAAAA,GAAH,kMAWJG,EAAOH,EAAAA,GAAAA,GAAH,kVAkBJI,EAAOJ,EAAAA,GAAAA,IAAH,oKAUJK,EAAYL,EAAAA,GAAAA,EAAH,0GAOTM,EAASN,EAAAA,GAAAA,EAAH,8FAMNO,EAAaP,EAAAA,GAAAA,IAAH,6G,SCevB,EAlEa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAIA,IAAMM,EAAa,IAAIC,gBAEjBC,EAAS,mCAAG,6FACVC,EADU,iBACgBT,EADhB,8BAIKU,EAAAA,EACjBD,EACAH,GANY,OAIRK,EAJQ,OAQdP,EAAQO,EAAKR,MARC,gDAUK,iBAAf,KAAMS,MACRC,EAAAA,GAAAA,MAAY,qDAEdT,EAAQ,IAbM,yDAAH,qDAkBf,OADAI,IACO,WACLF,EAAWQ,OACZ,CAxBA,CAyBF,GAAE,CAACd,KAGF,UAACT,EAAD,YACE,SAACE,EAAD,mBACCU,EAAKY,QACJ,SAACrB,EAAD,UACGS,EAAKa,KAAI,SAAAC,GAAK,OACb,UAACtB,EAAD,WACGsB,EAAMC,cACL,SAACnB,EAAD,CACEoB,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,KAAX,eAGL,SAACtB,EAAD,CACEoB,IAAG,oDACHC,IAAG,UAAKH,EAAMI,KAAX,eAGP,UAACzB,EAAD,YACE,SAACC,EAAD,UAAYoB,EAAMI,QAClB,uCAAeJ,EAAMK,kBAddL,EAAMM,GADJ,OAqBjB,SAACzB,EAAD,8DAIP,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding-right: 40px;\n  padding-left: 84px;\n  padding-bottom: 40px;\n`;\n\nexport const Header = styled.h3`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  list-style: none;\n  padding: 0;\n  margin: 0 auto;\n  margin-bottom: 30px; //cdvcdfvf\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 220px;\n  background-color: #fff;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 4px;\n  border: 1px solid gray;\n\n  &:hover,\n  &:focus {\n    scale: 1.02;\n  }\n`;\n\nexport const Info = styled.div`\n  font-size: 20px;\n  padding: 12px 4px;\n  font-weight: 400;\n  margin-top: 20px;\n  max-width: 220px;\n  color: gray;\n  margin: 0 auto;\n`;\n\nexport const ActorName = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n  color: black;\n  margin-bottom: 10px;\n`;\n\nexport const NoCast = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n`;\n\nexport const ActorImage = styled.img`\n  display: block;\n  width: 100%;\n  object-fit: cover;\n  object-position: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport * as TMDBApiService from 'service/tmdb-api-service';\n\nimport {\n  Header,\n  Info,\n  List,\n  Item,\n  ActorName,\n  ActorImage,\n  NoCast,\n  Container,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    const fetchCast = async () => {\n      const additionalUrl = `/movie/${movieId}/credits`;\n\n      try {\n        const data = await TMDBApiService.fetchMovies(\n          additionalUrl,\n          controller\n        );\n        setCast(data.cast);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.error('Error happened on server. Please, reload webpage.');\n        }\n        setCast([]);\n      }\n    };\n\n    fetchCast();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Container>\n      <Header>Cast</Header>\n      {cast.length ? (\n        <List>\n          {cast.map(actor => (\n            <Item key={actor.id}>\n              {actor.profile_path ? (\n                <ActorImage\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <ActorImage\n                  src={`https://via.placeholder.com/200x300?text=No+Photo`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n              <Info>\n                <ActorName>{actor.name}</ActorName>\n                <p>Character: {actor.character}</p>\n              </Info>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <NoCast>We don't have any information about the cast.</NoCast>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n"],"names":["Container","styled","Header","List","Item","Info","ActorName","NoCast","ActorImage","movieId","useParams","useState","cast","setCast","useEffect","controller","AbortController","fetchCast","additionalUrl","TMDBApiService","data","code","toast","abort","length","map","actor","profile_path","src","alt","name","character","id"],"sourceRoot":""}