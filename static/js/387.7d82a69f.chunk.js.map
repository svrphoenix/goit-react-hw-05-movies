{"version":3,"file":"static/js/387.7d82a69f.chunk.js","mappings":"wSAEaA,EAAYC,EAAAA,GAAAA,IAAH,2CAITC,EAASD,EAAAA,GAAAA,GAAH,gHAONE,EAAOF,EAAAA,GAAAA,GAAH,uLAWJG,EAAOH,EAAAA,GAAAA,GAAH,sFAKJI,EAASJ,EAAAA,GAAAA,GAAH,yFAMNK,EAASL,EAAAA,GAAAA,EAAH,0FAMNM,EAAYN,EAAAA,GAAAA,EAAH,8F,SC4BtB,EArDgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAIA,IAAMM,EAAa,IAAIC,gBAEjBC,EAAY,mCAAG,6FACbC,EADa,iBACaT,EADb,8BAIEU,EAAAA,EACjBD,EACAH,GANe,OAIXK,EAJW,OAQjBP,EAAWO,EAAKC,SARC,gDAUE,iBAAf,KAAMC,MACRC,EAAAA,GAAAA,MAAY,qDAEdV,EAAW,IAbM,yDAAH,qDAkBlB,OADAI,IACO,WACLF,EAAWS,OACZ,CAxBA,CAyBF,GAAE,CAACf,KAGF,UAACR,EAAD,YACE,SAACE,EAAD,sBACCS,EAAQa,QACP,SAACrB,EAAD,CAAMsB,UAAU,oBAAhB,SACGd,EAAQe,KAAI,SAAAC,GAAM,OACjB,UAACvB,EAAD,YACE,UAACC,EAAD,sBAAiBsB,EAAOC,WACxB,SAACtB,EAAD,UAASqB,EAAOE,YAFPF,EAAOG,GADD,OAQrB,SAACvB,EAAD,6DAEF,SAAC,KAAD,CAASwB,SAAS,YAAYC,cAAc,MAGjD,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n`;\n\nexport const Header = styled.h3`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  list-style: none;\n  padding: 0;\n  margin: 0 auto;\n  margin-bottom: 30px;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 20px;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const Author = styled.h4`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.3;\n  text-align: justify;\n  text-indent: 2em;\n`;\n\nexport const NoReviews = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\nimport * as TMDBApiService from 'service/tmdb-api-service';\n\nimport {\n  Author,\n  NoReviews,\n  Review,\n  Header,\n  List,\n  Item,\n  Container,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    const fetchReviews = async () => {\n      const additionalUrl = `/movie/${movieId}/reviews`;\n\n      try {\n        const data = await TMDBApiService.fetchMovies(\n          additionalUrl,\n          controller\n        );\n        setReviews(data.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.error('Error happened on server. Please, reload webpage.');\n        }\n        setReviews([]);\n      } \n    };\n\n    fetchReviews();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Container>\n      <Header>Reviews</Header>\n      {reviews.length ? (\n        <List className=\"reviews-container\">\n          {reviews.map(review => (\n            <Item key={review.id}>\n              <Author>Author: {review.author}</Author>\n              <Review>{review.content}</Review>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <NoReviews>We don't have any reviews for this movie yet.</NoReviews>\n      )}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n    </Container>\n  );\n};\nexport default Reviews;\n"],"names":["Container","styled","Header","List","Item","Author","Review","NoReviews","movieId","useParams","useState","reviews","setReviews","useEffect","controller","AbortController","fetchReviews","additionalUrl","TMDBApiService","data","results","code","toast","abort","length","className","map","review","author","content","id","position","reverseOrder"],"sourceRoot":""}