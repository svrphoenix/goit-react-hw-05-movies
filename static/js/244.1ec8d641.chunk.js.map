{"version":3,"file":"static/js/244.1ec8d641.chunk.js","mappings":"sTAGaA,EAAOC,EAAAA,GAAAA,KAAH,wNAYJC,EAASD,EAAAA,GAAAA,OAAH,sPAcNE,EAAQF,EAAAA,GAAAA,MAAH,yRAkBLG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,yD,SCFjB,EAxCmB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OACE,UAACT,EAAD,CAAMM,SAba,SAAAI,GACnBA,EAAIC,iBACJF,EAASD,EAAMI,cAAcC,QACxBL,GAKLF,EAASE,GACTC,EAAS,MALPK,EAAAA,EAAAA,IAAM,0BAMT,EAGC,WACE,SAACX,EAAD,CACEY,KAAK,SACLC,KAAK,OACLC,MAAOT,EACPU,YAAY,gBACZC,UAAQ,EACRC,WAAS,EACTC,aAAa,MACbC,SA1Bc,SAAAZ,GAClBD,EAASC,EAAIa,cAAcN,MAC5B,KA0BG,SAACf,EAAD,CAAQc,KAAK,SAAb,UACE,SAACZ,EAAD,QAIP,E,wCC2BD,EAxDe,WACb,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCrB,EAAAA,EAAAA,WAAS,GAA3C,eAAOsB,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMzB,EAAQmB,EAAaO,IAAI,SAE/B,GAAK1B,EAAL,CAEA,IAAM2B,EAAa,IAAIC,gBACvBN,GAAa,GAEb,IAAMO,EAAiB,mCAAG,6GAEHC,EAAAA,EAA4B9B,EAAO2B,GAFhC,UAIM,KAFtBI,EAFgB,QAIbC,QAAQC,OAJK,uBAKpB3B,EAAAA,EAAAA,IAAM,mBALc,0BAQtBW,EAAUc,EAAKC,SARO,kDAUH,iBAAf,KAAME,MACR5B,EAAAA,GAAAA,MAAY,qDAEdW,EAAU,IAbY,yBAetBK,GAAa,GAfS,6EAAH,qDAoBvB,OADAO,IACO,WACLF,EAAWQ,OACZ,CA3BiB,CA4BnB,GAAE,CAAChB,IAMJ,OACE,SAAC,IAAD,WACE,UAACiB,EAAA,EAAD,YACE,SAAC,EAAD,CAAYtC,SAPG,SAAAE,GACnBoB,EAAgB,CAAEpB,MAAAA,GACnB,IAMMqB,IAAa,SAACgB,EAAA,EAAD,KACd,SAACC,EAAA,EAAD,CAAStB,OAAQA,EAAQO,SAAUA,KACnC,SAAC,KAAD,CAASgB,SAAS,YAAYC,cAAc,QAInD,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  background: transparent;\n\n  font: inherit;\n  font-size: 18px;\n  border-style: none;\n\n  outline: none;\n  padding: 0 12px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Icon = styled(AiOutlineSearch)`\n  width: 20px;\n  height: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { Button, Form, Input, Icon } from './SearchForm.styled';\nimport { useState } from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInput = evt => {\n    setQuery(evt.currentTarget.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setQuery(query.toLowerCase().trim());\n    if (!query) {\n      toast('Please enter movie name');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        name=\"search\"\n        type=\"text\"\n        value={query}\n        placeholder=\"Search movies\"\n        required\n        autoFocus\n        autoComplete=\"off\"\n        onChange={handleInput}\n      />\n      <Button type=\"submit\">\n        <Icon />\n      </Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Toaster, toast } from 'react-hot-toast';\n\nimport * as TMDBApiService from 'service/tmdb-api-service';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Gallery from 'components/Gallery/Gallery';\nimport { Section } from 'components/Section/Section.styled';\nimport { Layout } from 'components/Layout/Layout';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (!query) return;\n\n    const controller = new AbortController();\n    setIsLoading(true);\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const data = await TMDBApiService.searchMovies(query, controller);\n\n        if (data.results.length === 0) {\n          toast('No movies found');\n          return;\n        }\n        setMovies(data.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.error('Error happened on server. Please, reload webpage.');\n        }\n        setMovies([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieByQuery();\n    return () => {\n      controller.abort();\n    };\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <Section>\n      <Layout>\n        <SearchForm onSubmit={handleSubmit} />\n        {isLoading && <Loader />}\n        <Gallery movies={movies} location={location} />\n        <Toaster position=\"top-right\" reverseOrder={false} />\n      </Layout>\n    </Section>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","Button","Input","Icon","AiOutlineSearch","onSubmit","useState","query","setQuery","evt","preventDefault","toLowerCase","trim","toast","name","type","value","placeholder","required","autoFocus","autoComplete","onChange","currentTarget","movies","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","location","useLocation","useEffect","get","controller","AbortController","fetchMovieByQuery","TMDBApiService","data","results","length","code","abort","Layout","Loader","Gallery","position","reverseOrder"],"sourceRoot":""}